/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Taljaard;


import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author 27649
 */
public class RegistrationScrn extends javax.swing.JFrame {

    /**
     * Creates new form RegistrationScrn
     */
    public RegistrationScrn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNoMembers1 = new javax.swing.JLabel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        pnlRegistration = new javax.swing.JPanel();
        lblRegister = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblNoMembers = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        txtSurname = new javax.swing.JTextField();
        txtHouseholdNum = new javax.swing.JTextField();
        btnRegister = new java.awt.Button();
        lblPassword = new javax.swing.JLabel();
        pswrdPassword = new javax.swing.JPasswordField();
        lblAuthenticity = new javax.swing.JLabel();
        txtExplainTruth = new javax.swing.JTextField();
        chckbxTruth = new java.awt.Checkbox();
        dtpkStartDate = new com.github.lgooddatepicker.components.DatePicker();

        lblNoMembers1.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblNoMembers1.setText("No.HOUSEHOLD MEMBERS");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlRegistration.setBackground(new java.awt.Color(204, 255, 153));

        lblRegister.setFont(new java.awt.Font("SimSun", 1, 24)); // NOI18N
        lblRegister.setForeground(new java.awt.Color(51, 102, 0));
        lblRegister.setText("REGISTRATION");

        lblSurname.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblSurname.setText("FAMILY SURNAME");

        lblNoMembers.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblNoMembers.setText("HOUSEHOLD MEMBERS");

        lblStartDate.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblStartDate.setText("STARTING DATE");

        txtSurname.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N

        txtHouseholdNum.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N

        btnRegister.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        btnRegister.setLabel("REGISTER NOW");
        btnRegister.setName(""); // NOI18N
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblPassword.setText("PASSWORD");

        pswrdPassword.setFont(new java.awt.Font("SimSun", 0, 10)); // NOI18N

        lblAuthenticity.setFont(new java.awt.Font("SimSun", 1, 18)); // NOI18N
        lblAuthenticity.setText("LEGAL DECLARATION OF TRUTH");

        txtExplainTruth.setEditable(false);
        txtExplainTruth.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        txtExplainTruth.setText("TRUTHFULNESS OF ALL PARTICIPANTS IS VITAL");

        javax.swing.GroupLayout pnlRegistrationLayout = new javax.swing.GroupLayout(pnlRegistration);
        pnlRegistration.setLayout(pnlRegistrationLayout);
        pnlRegistrationLayout.setHorizontalGroup(
            pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrationLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRegistrationLayout.createSequentialGroup()
                                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSurname)
                                    .addComponent(lblStartDate)
                                    .addComponent(lblPassword))
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegistrationLayout.createSequentialGroup()
                                .addComponent(lblNoMembers)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSurname)
                            .addComponent(txtHouseholdNum)
                            .addComponent(pswrdPassword)
                            .addComponent(dtpkStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                        .addGap(23, 23, 23))
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addComponent(lblAuthenticity)
                        .addGap(48, 48, 48)
                        .addComponent(chckbxTruth, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnlRegistrationLayout.createSequentialGroup()
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(lblRegister))
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txtExplainTruth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlRegistrationLayout.setVerticalGroup(
            pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegistrationLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSurname))
                .addGap(24, 24, 24)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoMembers)
                    .addComponent(txtHouseholdNum, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpkStartDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pswrdPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(txtExplainTruth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(chckbxTruth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRegistrationLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblAuthenticity, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlRegistration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        //Data validation check for Surname value
        boolean surValid = true;
        {
            if (txtSurname.getText().contains("*") || txtSurname.getText().contains("!") || txtSurname.getText().contains("@") || txtSurname.getText().contains("#") || txtSurname.getText().contains("^")) {
                surValid = false;
            }
            if (txtSurname.getText().trim().isEmpty() || txtSurname.getText().trim().length() > 15 || !surValid) {
                JOptionPane.showMessageDialog(this, "Please enter a valid surname");
            }
        }

        //Data validation check for household members value
        {
            if (!txtHouseholdNum.getText().isEmpty()) {
                try {

                    int members = Integer.parseInt(txtHouseholdNum.getText());

                } catch (NumberFormatException f) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid number of household members");
                }
            } else if (txtHouseholdNum.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a valid number of household members");
            }
        }

        //Data validation for starting date value
        LocalDate now = LocalDate.now();
        if (dtpkStartDate.getDate() == null || !(dtpkStartDate.getDate().isAfter(now))) {
            JOptionPane.showMessageDialog(this, "Please select a valid starting date");
        }

        //Data validation for password
        //Passwords must have 8 characters
        if (pswrdPassword.getPassword().length < 8 || pswrdPassword.getPassword().length > 8) {
            JOptionPane.showMessageDialog(this, "Please select a password with 8 characters");
        }

        if (chckbxTruth.getState() == false) {
            JOptionPane.showMessageDialog(this, "Please declare truthfulness if you wish to proceed");
        }

        char[] passwordChars = pswrdPassword.getPassword();
        String password = new String(passwordChars);

  //Method addUser() called to pass variables gathered as per user's input into a new competitor
        Competitor.addUser(txtSurname.getText(), txtSurname.getText().toUpperCase().charAt(0), Integer.parseInt(txtHouseholdNum.getText()), dtpkStartDate.getDate(), dtpkStartDate.getDate().plusWeeks(2), password, Competitor.createUserName(txtSurname.getText(), txtSurname.getText().toUpperCase().charAt(0)));
        // System.out.println(Competitor.createUserName(txtSurname.getText(), txtSurname.getText().charAt(0)));
        CongratsForRegistrationScrn congrats = new CongratsForRegistrationScrn();
        congrats.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationScrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationScrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationScrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationScrn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationScrn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnRegister;
    private java.awt.Checkbox chckbxTruth;
    private com.github.lgooddatepicker.components.DatePicker dtpkStartDate;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JLabel lblAuthenticity;
    private javax.swing.JLabel lblNoMembers;
    private javax.swing.JLabel lblNoMembers1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblRegister;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JPanel pnlRegistration;
    private javax.swing.JPasswordField pswrdPassword;
    private javax.swing.JTextField txtExplainTruth;
    private javax.swing.JTextField txtHouseholdNum;
    private javax.swing.JTextField txtSurname;
    // End of variables declaration//GEN-END:variables
}
